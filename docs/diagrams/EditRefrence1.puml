@startuml
'https://plantuml.com/sequence-diagram
!include Styles.puml

box command COLOR_FAINT_GREEN
participant ":EditInstrumentCommand" as EditInstrumentCommand COLOR_COMMANDS
end box

box model COLOR_MODEL_SEGMENT
participant ":InstrumentManager" as InstrumentManager COLOR_MODEL
participant ":Instrument" as Instrument COLOR_MODEL
end box

box ui COLOR_LIGHT_BLUE
participant ":TextUi" as TextUi COLOR_UI
end box

[->EditInstrumentCommand:execute()
activate EditInstrumentCommand

EditInstrumentCommand -> InstrumentManager: getInstrument(1)
activate InstrumentManager

InstrumentManager --> EditInstrumentCommand: return instrument
deactivate InstrumentManager

EditInstrumentCommand -> Instrument: getAllParam()
activate Instrument
Instrument --> EditInstrumentCommand: return parameters before edit
deactivate Instrument

EditInstrumentCommand-> InstrumentManager: editInstrument(1, {"name", ""new name"})
activate InstrumentManager

InstrumentManager -> InstrumentManager: getInstrument(1)
activate InstrumentManager
InstrumentManager --> InstrumentManager
deactivate InstrumentManager

InstrumentManager -> Instrument: editParameter()
activate Instrument

ref over Instrument
check if parameter exist in HashMap and edit
endref

Instrument --> InstrumentManager
deactivate Instrument

InstrumentManager --> EditInstrumentCommand
deactivate InstrumentManager

EditInstrumentCommand -> Instrument: getAllParam()
activate Instrument
Instrument --> EditInstrumentCommand: return parameters after edit
deactivate Instrument

EditInstrumentCommand-> TextUi: displayEditBeforeAfter(parameters before, parameters after)
activate TextUi

TextUi --> EditInstrumentCommand
deactivate TextUi

[<--EditInstrumentCommand
deactivate EditInstrumentCommand
@enduml